{
	"info": {
		"_postman_id": "1b1ff68a-d22f-4d65-9320-95f16e4c6906",
		"name": "vending_machine",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23107636",
		"_collection_link": "https://lively-capsule-953081.postman.co/workspace/My-Workspace~4ab4ebe6-d22e-43b4-8e28-4a4fed34e100/collection/23107636-1b1ff68a-d22f-4d65-9320-95f16e4c6906?action=share&source=collection_link&creator=23107636"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"waer11\",\r\n    \"password\": \"12345678Aa+\",\r\n    \"role\": \"seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/users/register/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"register",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"waer8\",\r\n    \"password\": \"12345678Aa+\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/users/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/users/profile/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"profile",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "get all products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n        \"amountAvailable\": 45,\r\n        \"cost\": 30,\r\n        \"productName\": \"waer yousef\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/products/6",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products/10",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "get my products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/products/my-products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"my-products"
							]
						}
					},
					"response": []
				},
				{
					"name": "add product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"productName\":\"delete 3\",\r\n \"amountAvailable\": 45,\r\n \"cost\": 3   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/products/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "vending",
			"item": [
				{
					"name": "deposit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\":100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/vending/deposit",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"vending",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "buy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"productId\": 6,\r\n    \"amount\":40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/vending/buy/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"vending",
								"buy",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "reset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"productName\":\"amr8887\",\r\n \"amountAvailable\": 45,\r\n \"cost\": 3   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/vending/reset/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"vending",
								"reset",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywidXNlcm5hbWUiOiJ3YWVyOCIsInJvbGUiOiJidXllciIsImlhdCI6MTcwNzEyNjYwNCwiZXhwIjoxNzA4NDIyNjA0fQ.9SQgSxY7hC4ws6DZrj1HWNsMSE64HjDPII3L5JKILWg",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		},
		{
			"key": "url",
			"value": "localhost:3000"
		}
	]
}